{"version":3,"sources":["components/card/Card.component.js","components/cardList/CardList.component.js","components/search-box/Search-Box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","results","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGe,SAASA,EAAKC,GAC3B,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,W,MCPT,SAASC,EAASR,GAC/B,OACE,sBAAKC,UAAU,YAAf,UACG,IACAD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAACJ,EAAD,CAAMI,QAASA,U,MCNR,SAASQ,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC/C,OACE,uBACEC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAUF,I,ICkCDG,E,kDArCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAa,EAAKT,SAAS,CAAET,SAAUkB,S,+BAOvC,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC3B,GAAD,OACvCA,EAAQG,KAAKyB,cAAcC,SAASb,MAGtC,OACE,sBAAKlB,UAAU,MAAf,UACE,cAACU,EAAD,CACEC,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAACL,EAAD,CAAUC,SAAUoB,W,GAhCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4a324a1d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nexport default function Card(props) {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n        alt=\"monster\"\n      />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Card from \"../card/Card.component\";\nimport \"./card-list.styles.css\";\n\nexport default function CardList(props) {\n  return (\n    <div className=\"card-list\">\n      {\" \"}\n      {props.monsters.map((monster) => (\n        <Card monster={monster} />\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport default function SearchBox({ placeholder, handleChange }) {\n  return (\n    <input\n      type=\"search\"\n      className=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n}\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/cardList/CardList.component\";\nimport SearchBox from \"./components/search-box/Search-Box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((results) => this.setState({ monsters: results }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField)\n    );\n\n    return (\n      <div className=\"App\">\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}